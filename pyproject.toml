[project]
name = "conference"
version = "0.1.0"
description = ""
authors = [
    {name = "MDx3R",email = "nationmdxr@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "sqlalchemy (>=2.0.43,<3.0.0)",
    "pydantic (>=2.11.9,<3.0.0)",
    "fastapi (>=0.116.2,<0.117.0)"
]

[tool.poetry]
packages = [{include = "conference", from = "src"}]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[dependency-groups]
dev = [
    "pytest (>=8.4.2,<9.0.0)",
    "pytest-asyncio (>=1.2.0,<2.0.0)",
    "ruff (>=0.13.1,<0.14.0)",
    "black (>=25.9.0,<26.0.0)",
    "mypy (>=1.18.2,<2.0.0)",
    "pytest-cov (>=7.0.0,<8.0.0)",
    "pre-commit (>=4.3.0,<5.0.0)"
]

[tool.ruff]
line-length = 88
target-version = "py311"
src = ["src/conference"]
include = ["*.py", "*.pyi"]
exclude = ["build", "dist", ".venv", ".git", "__pycache__"]
fix = true

[tool.ruff.lint]
select = [
  "E",  # ошибки стиля (flake8)
  "F",  # синтаксические ошибки
  "I",  # сортировка импортов (isort)
  "B",  # баги (flake8-bugbear)
  "C",  # complexity
  "D",  # docstrings (pydocstyle)
  "PT", # типы (частично mypy)
]
ignore = [
    "D203", 
    "D213", 
    "E501", 
    "D100", # docstrings
    "D101", 
    "D102", 
    "D103", 
    "D104", 
    "D105", 
    "D106", 
    "D107",
]

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["conference"]
lines-after-imports = 2

[tool.mypy]
mypy_path = "src"
python_version = 3.11
strict = true
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
explicit_package_bases = true

[[tool.mypy.overrides]]
module = "tests.*"
disable_error_code = ["no-untyped-def", "misc"]